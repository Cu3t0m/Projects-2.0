{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8","program":"/Users/kishore/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=5c2c26c9aa1b3033","-C","extra-filename=-5c2c26c9aa1b3033","--out-dir","/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps","-L","dependency=/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps","--extern","bytes=/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps/libbytes-0b832d8af096da75.rmeta","--extern","futures_core=/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps/libfutures_core-bd9844a57c4da7a2.rmeta","--extern","futures_sink=/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps/libfutures_sink-164f3cc30370866b.rmeta","--extern","log=/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps/liblog-915263c2dc8e6f25.rmeta","--extern","pin_project_lite=/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps/libpin_project_lite-0c17da530a19c42f.rmeta","--extern","tokio=/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps/libtokio-bc22071f403d7200.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kishore/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/kishore/Projects/Web Dev/web-app/target/rls/debug/deps/libtokio_util-5c2c26c9aa1b3033.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[6071375045668193151,0]},"crate_root":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src","external_crates":[{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7777094053559708767,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12786826162718588903,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7262382603413566750,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12233289566066112318,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4998072162051350919,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14817392966914922723,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13537029249427453884,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16172866892641339196,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[18226255698322429307,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12872472635654720224,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15477836623066676988,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8883445751219211826,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4189598673803333586,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":17,"id":{"name":"futures_core","disambiguator":[5183543008060207999,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":18,"id":{"name":"futures_sink","disambiguator":[16811378660579388103,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":19,"id":{"name":"tokio","disambiguator":[14132704087366695036,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":20,"id":{"name":"mio","disambiguator":[12358427015038249732,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":21,"id":{"name":"log","disambiguator":[8464977436658569583,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":22,"id":{"name":"cfg_if","disambiguator":[14051682313894696593,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":23,"id":{"name":"libc","disambiguator":[10523018658660346655,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[3265955442758040344,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":25,"id":{"name":"bytes","disambiguator":[1528521484235886792,0]}},{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":26,"id":{"name":"memchr","disambiguator":[16214907670040637616,0]}}],"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878998,"byte_end":13879008,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879047,"byte_end":13879054,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879093,"byte_end":13879100,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879262,"byte_end":13879268,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879270,"byte_end":13879281,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879329,"byte_end":13879339,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879388,"byte_end":13879399,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879461,"byte_end":13879481,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879483,"byte_end":13879508,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879557,"byte_end":13879567,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879569,"byte_end":13879584,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879649,"byte_end":13879666,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879668,"byte_end":13879690,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6717,"byte_end":6726,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6728,"byte_end":6745,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6747,"byte_end":6772,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6835,"byte_end":6845,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6892,"byte_end":6905,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6948,"byte_end":6965,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13868726,"byte_end":13868779,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13868780,"byte_end":13868783,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13868784,"byte_end":13868859,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13868860,"byte_end":13868925,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13868926,"byte_end":13868929,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13868930,"byte_end":13869010,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869011,"byte_end":13869086,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869087,"byte_end":13869135,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869136,"byte_end":13869139,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869140,"byte_end":13869163,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869164,"byte_end":13869167,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869168,"byte_end":13869247,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869248,"byte_end":13869327,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869328,"byte_end":13869399,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869400,"byte_end":13869470,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869471,"byte_end":13869549,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869550,"byte_end":13869626,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869627,"byte_end":13869660,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869661,"byte_end":13869664,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869665,"byte_end":13869745,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869746,"byte_end":13869826,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869827,"byte_end":13869877,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869878,"byte_end":13869881,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869882,"byte_end":13869933,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869934,"byte_end":13869983,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13869984,"byte_end":13870035,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870036,"byte_end":13870039,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870040,"byte_end":13870105,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870106,"byte_end":13870109,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870110,"byte_end":13870187,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870188,"byte_end":13870229,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870230,"byte_end":13870233,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870234,"byte_end":13870314,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870315,"byte_end":13870394,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870395,"byte_end":13870473,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870474,"byte_end":13870553,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870554,"byte_end":13870568,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870569,"byte_end":13870572,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870573,"byte_end":13870652,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870653,"byte_end":13870732,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870733,"byte_end":13870750,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870751,"byte_end":13870754,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870755,"byte_end":13870832,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870833,"byte_end":13870912,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870913,"byte_end":13870990,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13870991,"byte_end":13871061,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871062,"byte_end":13871111,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871112,"byte_end":13871115,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871116,"byte_end":13871129,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871130,"byte_end":13871162,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871163,"byte_end":13871230,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871231,"byte_end":13871345,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871346,"byte_end":13871383,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871384,"byte_end":13871445,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871446,"byte_end":13871495,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871496,"byte_end":13871499,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871500,"byte_end":13871541,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871542,"byte_end":13871552,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871553,"byte_end":13871637,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871638,"byte_end":13871694,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871695,"byte_end":13871698,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871699,"byte_end":13871720,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871721,"byte_end":13871788,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871789,"byte_end":13871817,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871818,"byte_end":13871831,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871832,"byte_end":13871850,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871851,"byte_end":13871860,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871861,"byte_end":13871864,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871865,"byte_end":13871924,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871925,"byte_end":13871949,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871950,"byte_end":13871959,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871960,"byte_end":13871965,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871966,"byte_end":13871974,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871975,"byte_end":13871982,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13871983,"byte_end":13872057,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872058,"byte_end":13872061,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872062,"byte_end":13872084,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872085,"byte_end":13872088,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872089,"byte_end":13872166,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872167,"byte_end":13872243,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872244,"byte_end":13872323,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872324,"byte_end":13872378,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872379,"byte_end":13872382,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872383,"byte_end":13872427,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872428,"byte_end":13872435,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872436,"byte_end":13872471,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872472,"byte_end":13872503,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872504,"byte_end":13872507,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872508,"byte_end":13872537,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872538,"byte_end":13872541,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872542,"byte_end":13872581,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872582,"byte_end":13872585,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872586,"byte_end":13872624,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872625,"byte_end":13872652,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872653,"byte_end":13872689,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872690,"byte_end":13872693,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872694,"byte_end":13872712,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872713,"byte_end":13872735,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872736,"byte_end":13872766,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872767,"byte_end":13872821,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872822,"byte_end":13872852,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872853,"byte_end":13872910,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872911,"byte_end":13872943,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872944,"byte_end":13872957,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872958,"byte_end":13872961,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872962,"byte_end":13872996,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13872997,"byte_end":13873041,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873042,"byte_end":13873094,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873095,"byte_end":13873162,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873163,"byte_end":13873166,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873167,"byte_end":13873241,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873242,"byte_end":13873308,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873309,"byte_end":13873338,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873339,"byte_end":13873386,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873387,"byte_end":13873439,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873440,"byte_end":13873511,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873512,"byte_end":13873531,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873532,"byte_end":13873545,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873546,"byte_end":13873549,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873550,"byte_end":13873589,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873590,"byte_end":13873645,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873646,"byte_end":13873664,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873665,"byte_end":13873741,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873742,"byte_end":13873808,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873809,"byte_end":13873861,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873862,"byte_end":13873865,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873866,"byte_end":13873946,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873947,"byte_end":13873972,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13873973,"byte_end":13874005,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874006,"byte_end":13874019,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874020,"byte_end":13874023,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874024,"byte_end":13874096,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874097,"byte_end":13874123,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874124,"byte_end":13874175,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874176,"byte_end":13874212,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874213,"byte_end":13874216,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874217,"byte_end":13874295,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874296,"byte_end":13874339,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874340,"byte_end":13874387,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874388,"byte_end":13874424,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874425,"byte_end":13874469,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874470,"byte_end":13874526,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874527,"byte_end":13874575,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874576,"byte_end":13874598,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874599,"byte_end":13874617,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874618,"byte_end":13874631,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874632,"byte_end":13874641,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874642,"byte_end":13874647,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874648,"byte_end":13874655,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874656,"byte_end":13874659,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874660,"byte_end":13874683,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874684,"byte_end":13874687,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874688,"byte_end":13874766,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874767,"byte_end":13874840,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874841,"byte_end":13874917,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874918,"byte_end":13874998,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13874999,"byte_end":13875015,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875016,"byte_end":13875019,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875020,"byte_end":13875100,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875101,"byte_end":13875180,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875181,"byte_end":13875261,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875262,"byte_end":13875334,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875335,"byte_end":13875338,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875339,"byte_end":13875416,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875417,"byte_end":13875495,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875496,"byte_end":13875569,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875570,"byte_end":13875636,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875637,"byte_end":13875640,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875641,"byte_end":13875654,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875655,"byte_end":13875688,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875689,"byte_end":13875723,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875724,"byte_end":13875761,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875762,"byte_end":13875829,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875830,"byte_end":13875865,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875866,"byte_end":13875927,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875928,"byte_end":13875974,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13875975,"byte_end":13876036,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876037,"byte_end":13876040,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876041,"byte_end":13876069,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876070,"byte_end":13876073,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876074,"byte_end":13876115,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876116,"byte_end":13876126,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876127,"byte_end":13876151,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876152,"byte_end":13876226,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876227,"byte_end":13876269,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876270,"byte_end":13876284,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876285,"byte_end":13876342,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876343,"byte_end":13876392,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876393,"byte_end":13876407,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876408,"byte_end":13876445,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876446,"byte_end":13876497,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876498,"byte_end":13876544,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876545,"byte_end":13876575,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876576,"byte_end":13876590,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876591,"byte_end":13876600,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876601,"byte_end":13876606,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876607,"byte_end":13876614,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876615,"byte_end":13876622,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876623,"byte_end":13876698,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876699,"byte_end":13876772,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876773,"byte_end":13876815,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876816,"byte_end":13876819,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876820,"byte_end":13876842,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876843,"byte_end":13876846,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876847,"byte_end":13876924,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13876925,"byte_end":13877001,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877002,"byte_end":13877078,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877079,"byte_end":13877102,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877103,"byte_end":13877106,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877107,"byte_end":13877152,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877153,"byte_end":13877160,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877161,"byte_end":13877196,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877197,"byte_end":13877221,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877222,"byte_end":13877225,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877226,"byte_end":13877255,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877256,"byte_end":13877259,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877260,"byte_end":13877299,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877300,"byte_end":13877303,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877304,"byte_end":13877350,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877351,"byte_end":13877387,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877388,"byte_end":13877391,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877392,"byte_end":13877483,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877484,"byte_end":13877558,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877559,"byte_end":13877581,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877582,"byte_end":13877615,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877616,"byte_end":13877663,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877664,"byte_end":13877716,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877717,"byte_end":13877792,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877793,"byte_end":13877812,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877813,"byte_end":13877826,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877827,"byte_end":13877830,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877831,"byte_end":13877883,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877884,"byte_end":13877961,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13877962,"byte_end":13878026,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878027,"byte_end":13878030,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878031,"byte_end":13878074,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878075,"byte_end":13878115,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878116,"byte_end":13878119,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878120,"byte_end":13878177,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878178,"byte_end":13878224,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878225,"byte_end":13878276,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878277,"byte_end":13878295,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878296,"byte_end":13878305,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878306,"byte_end":13878311,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878312,"byte_end":13878319,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878320,"byte_end":13878323,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878324,"byte_end":13878363,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878364,"byte_end":13878405,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878406,"byte_end":13878442,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878443,"byte_end":13878475,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878476,"byte_end":13878572,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878573,"byte_end":13878624,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878625,"byte_end":13878678,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878679,"byte_end":13878722,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878723,"byte_end":13878767,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878768,"byte_end":13878816,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878817,"byte_end":13878865,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878866,"byte_end":13878912,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13878913,"byte_end":13878952,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880976,"byte_end":13880986,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13879819,"byte_end":13879904,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13879905,"byte_end":13879908,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13879909,"byte_end":13879947,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13879948,"byte_end":13879986,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13879987,"byte_end":13879990,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13879991,"byte_end":13880004,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880005,"byte_end":13880008,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880009,"byte_end":13880090,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880091,"byte_end":13880094,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880095,"byte_end":13880134,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880135,"byte_end":13880168,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880169,"byte_end":13880198,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880199,"byte_end":13880202,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880203,"byte_end":13880210,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880211,"byte_end":13880229,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880230,"byte_end":13880260,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880261,"byte_end":13880285,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880286,"byte_end":13880293,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880294,"byte_end":13880323,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880324,"byte_end":13880376,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880377,"byte_end":13880380,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880381,"byte_end":13880399,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880400,"byte_end":13880417,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880418,"byte_end":13880498,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880499,"byte_end":13880533,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880534,"byte_end":13880587,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880588,"byte_end":13880599,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880600,"byte_end":13880607,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880608,"byte_end":13880613,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880614,"byte_end":13880661,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880662,"byte_end":13880715,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880716,"byte_end":13880774,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880775,"byte_end":13880854,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880855,"byte_end":13880867,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880868,"byte_end":13880875,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880876,"byte_end":13880883,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880884,"byte_end":13880887,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13881088,"byte_end":13881091,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13881015,"byte_end":13881076,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883092,"byte_end":13883099,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13881806,"byte_end":13881841,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13881842,"byte_end":13881845,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13881846,"byte_end":13881915,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13881916,"byte_end":13881995,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13881996,"byte_end":13882068,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882069,"byte_end":13882093,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882094,"byte_end":13882097,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882098,"byte_end":13882166,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882167,"byte_end":13882244,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882245,"byte_end":13882306,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882307,"byte_end":13882310,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882311,"byte_end":13882372,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882373,"byte_end":13882435,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882436,"byte_end":13882439,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882440,"byte_end":13882503,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882504,"byte_end":13882567,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882568,"byte_end":13882647,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882648,"byte_end":13882722,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882723,"byte_end":13882742,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882743,"byte_end":13882746,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882747,"byte_end":13882815,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882816,"byte_end":13882878,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882879,"byte_end":13882954,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882955,"byte_end":13882995,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13882996,"byte_end":13882999,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883000,"byte_end":13883036,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883037,"byte_end":13883081,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883147,"byte_end":13883151,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883106,"byte_end":13883137,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883917,"byte_end":13883922,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883158,"byte_end":13883210,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883215,"byte_end":13883218,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883223,"byte_end":13883292,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883297,"byte_end":13883367,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883372,"byte_end":13883418,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883423,"byte_end":13883426,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883431,"byte_end":13883507,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883512,"byte_end":13883587,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883592,"byte_end":13883667,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883672,"byte_end":13883712,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883717,"byte_end":13883720,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883725,"byte_end":13883799,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883804,"byte_end":13883850,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883855,"byte_end":13883858,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883863,"byte_end":13883907,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886858,"byte_end":13886864,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13883946,"byte_end":13884011,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884016,"byte_end":13884019,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884024,"byte_end":13884098,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884103,"byte_end":13884175,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884180,"byte_end":13884253,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884258,"byte_end":13884301,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884306,"byte_end":13884309,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884314,"byte_end":13884387,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884392,"byte_end":13884455,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884460,"byte_end":13884535,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884540,"byte_end":13884615,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884620,"byte_end":13884643,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884648,"byte_end":13884651,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884656,"byte_end":13884728,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884733,"byte_end":13884807,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884812,"byte_end":13884882,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884887,"byte_end":13884890,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884895,"byte_end":13884963,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13884968,"byte_end":13885039,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885044,"byte_end":13885124,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885129,"byte_end":13885141,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885146,"byte_end":13885149,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885154,"byte_end":13885224,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885229,"byte_end":13885304,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885309,"byte_end":13885346,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885351,"byte_end":13885354,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885359,"byte_end":13885395,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885400,"byte_end":13885444,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885449,"byte_end":13885452,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885457,"byte_end":13885480,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885485,"byte_end":13885488,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885493,"byte_end":13885567,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885572,"byte_end":13885646,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885651,"byte_end":13885704,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885709,"byte_end":13885712,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885717,"byte_end":13885788,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885793,"byte_end":13885863,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885868,"byte_end":13885884,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885889,"byte_end":13885892,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885897,"byte_end":13885910,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885915,"byte_end":13885933,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885938,"byte_end":13885943,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885948,"byte_end":13885974,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13885979,"byte_end":13886016,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886021,"byte_end":13886026,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886031,"byte_end":13886052,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886057,"byte_end":13886062,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886067,"byte_end":13886097,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886102,"byte_end":13886116,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886121,"byte_end":13886152,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886157,"byte_end":13886190,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886195,"byte_end":13886198,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886203,"byte_end":13886296,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886301,"byte_end":13886319,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886324,"byte_end":13886327,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886332,"byte_end":13886404,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886409,"byte_end":13886469,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886474,"byte_end":13886526,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886531,"byte_end":13886593,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886598,"byte_end":13886665,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886670,"byte_end":13886673,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886678,"byte_end":13886706,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886711,"byte_end":13886720,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886725,"byte_end":13886730,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886735,"byte_end":13886742,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886747,"byte_end":13886750,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886755,"byte_end":13886824,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886829,"byte_end":13886850,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888030,"byte_end":13888040,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13886945,"byte_end":13887017,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887022,"byte_end":13887071,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887076,"byte_end":13887079,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887084,"byte_end":13887152,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887157,"byte_end":13887224,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887229,"byte_end":13887297,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887302,"byte_end":13887378,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887383,"byte_end":13887449,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887454,"byte_end":13887457,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887462,"byte_end":13887530,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887535,"byte_end":13887610,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887615,"byte_end":13887690,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887695,"byte_end":13887767,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887772,"byte_end":13887814,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887819,"byte_end":13887822,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887827,"byte_end":13887902,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887907,"byte_end":13887985,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13887990,"byte_end":13888022,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889648,"byte_end":13889654,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888458,"byte_end":13888538,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888543,"byte_end":13888619,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888624,"byte_end":13888627,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888632,"byte_end":13888707,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888712,"byte_end":13888782,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888787,"byte_end":13888858,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888863,"byte_end":13888935,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13888940,"byte_end":13888998,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889003,"byte_end":13889006,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889011,"byte_end":13889080,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889085,"byte_end":13889160,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889165,"byte_end":13889241,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889246,"byte_end":13889268,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889273,"byte_end":13889276,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889281,"byte_end":13889354,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889359,"byte_end":13889432,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889437,"byte_end":13889513,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889518,"byte_end":13889521,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889526,"byte_end":13889562,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889567,"byte_end":13889599,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":13889604,"byte_end":13889640,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13889988,"byte_end":13889995,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13889833,"byte_end":13889905,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13889906,"byte_end":13889926,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13889927,"byte_end":13889930,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13889931,"byte_end":13889977,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890260,"byte_end":13890265,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890008,"byte_end":13890040,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890045,"byte_end":13890048,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890053,"byte_end":13890130,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890135,"byte_end":13890191,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890196,"byte_end":13890199,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890204,"byte_end":13890250,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890616,"byte_end":13890622,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890289,"byte_end":13890334,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890339,"byte_end":13890342,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890347,"byte_end":13890421,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890426,"byte_end":13890506,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890511,"byte_end":13890549,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890554,"byte_end":13890557,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":13890562,"byte_end":13890608,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901439,"byte_end":13901445,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1508}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903218,"byte_end":13903221,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901587,"byte_end":13901667,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901672,"byte_end":13901753,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901758,"byte_end":13901761,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901766,"byte_end":13901841,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901846,"byte_end":13901916,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901921,"byte_end":13901990,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901995,"byte_end":13902067,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902072,"byte_end":13902130,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902135,"byte_end":13902138,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902143,"byte_end":13902214,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902219,"byte_end":13902296,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902301,"byte_end":13902377,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902382,"byte_end":13902404,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902409,"byte_end":13902412,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902417,"byte_end":13902490,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902495,"byte_end":13902568,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902573,"byte_end":13902649,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902654,"byte_end":13902657,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902662,"byte_end":13902738,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902743,"byte_end":13902819,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902824,"byte_end":13902899,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902904,"byte_end":13902939,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902944,"byte_end":13902947,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902952,"byte_end":13902988,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13902993,"byte_end":13903025,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903030,"byte_end":13903067,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903072,"byte_end":13903110,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903115,"byte_end":13903206,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904829,"byte_end":13904842,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903434,"byte_end":13903514,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903519,"byte_end":13903600,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903605,"byte_end":13903654,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903659,"byte_end":13903662,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903667,"byte_end":13903742,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903747,"byte_end":13903817,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903822,"byte_end":13903891,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903896,"byte_end":13903968,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13903973,"byte_end":13904031,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904036,"byte_end":13904039,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904044,"byte_end":13904115,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904120,"byte_end":13904197,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904202,"byte_end":13904278,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904283,"byte_end":13904305,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904310,"byte_end":13904313,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904318,"byte_end":13904391,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904396,"byte_end":13904469,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904474,"byte_end":13904550,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904555,"byte_end":13904558,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904563,"byte_end":13904599,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904604,"byte_end":13904636,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904641,"byte_end":13904678,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904683,"byte_end":13904721,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13904726,"byte_end":13904817,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906945,"byte_end":13906955,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905368,"byte_end":13905448,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905453,"byte_end":13905534,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905539,"byte_end":13905542,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905547,"byte_end":13905622,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905627,"byte_end":13905697,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905702,"byte_end":13905773,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905778,"byte_end":13905850,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905855,"byte_end":13905913,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905918,"byte_end":13905921,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905926,"byte_end":13905997,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906002,"byte_end":13906079,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906084,"byte_end":13906160,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906165,"byte_end":13906187,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906192,"byte_end":13906195,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906200,"byte_end":13906279,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906284,"byte_end":13906361,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906366,"byte_end":13906369,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906374,"byte_end":13906447,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906452,"byte_end":13906525,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906530,"byte_end":13906606,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906611,"byte_end":13906614,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906619,"byte_end":13906655,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906660,"byte_end":13906692,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906697,"byte_end":13906735,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906740,"byte_end":13906778,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906783,"byte_end":13906837,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13906842,"byte_end":13906933,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907590,"byte_end":13907597,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907307,"byte_end":13907370,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907375,"byte_end":13907388,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907393,"byte_end":13907396,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907401,"byte_end":13907476,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907481,"byte_end":13907551,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907556,"byte_end":13907578,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907941,"byte_end":13907948,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907650,"byte_end":13907721,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907726,"byte_end":13907739,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907744,"byte_end":13907747,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907752,"byte_end":13907827,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907832,"byte_end":13907902,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13907907,"byte_end":13907929,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908311,"byte_end":13908322,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908013,"byte_end":13908091,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908096,"byte_end":13908109,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908114,"byte_end":13908117,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908122,"byte_end":13908197,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908202,"byte_end":13908272,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908277,"byte_end":13908299,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908669,"byte_end":13908674,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908418,"byte_end":13908476,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908481,"byte_end":13908494,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908499,"byte_end":13908502,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908507,"byte_end":13908581,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908586,"byte_end":13908657,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908986,"byte_end":13908995,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908727,"byte_end":13908793,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908798,"byte_end":13908811,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908816,"byte_end":13908819,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908824,"byte_end":13908898,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13908903,"byte_end":13908974,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909115,"byte_end":13909126,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909060,"byte_end":13909103,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909261,"byte_end":13909276,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909198,"byte_end":13909249,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909416,"byte_end":13909428,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909360,"byte_end":13909404,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909565,"byte_end":13909581,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909501,"byte_end":13909553,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909931,"byte_end":13909941,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909666,"byte_end":13909729,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909734,"byte_end":13909737,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909742,"byte_end":13909817,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909822,"byte_end":13909892,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909897,"byte_end":13909919,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910313,"byte_end":13910323,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13909991,"byte_end":13910065,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910070,"byte_end":13910111,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910116,"byte_end":13910119,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910124,"byte_end":13910199,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910204,"byte_end":13910274,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910279,"byte_end":13910301,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912297,"byte_end":13912308,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13911982,"byte_end":13912053,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912054,"byte_end":13912126,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912127,"byte_end":13912187,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912188,"byte_end":13912191,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912192,"byte_end":13912228,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912246,"byte_end":13912285,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912394,"byte_end":13912396,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912321,"byte_end":13912385,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912428,"byte_end":13912433,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912406,"byte_end":13912419,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912498,"byte_end":13912506,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912443,"byte_end":13912489,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912593,"byte_end":13912602,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912523,"byte_end":13912584,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912835,"byte_end":13912838,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912783,"byte_end":13912823,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13913567,"byte_end":13913577,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1467}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13913828,"byte_end":13913831,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13913760,"byte_end":13913816,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914179,"byte_end":13914192,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914063,"byte_end":13914145,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914150,"byte_end":13914167,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914906,"byte_end":13914913,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914619,"byte_end":13914682,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914687,"byte_end":13914704,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914709,"byte_end":13914712,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914717,"byte_end":13914792,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914797,"byte_end":13914867,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914872,"byte_end":13914894,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915261,"byte_end":13915268,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914966,"byte_end":13915037,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915042,"byte_end":13915059,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915064,"byte_end":13915067,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915072,"byte_end":13915147,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915152,"byte_end":13915222,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915227,"byte_end":13915249,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915635,"byte_end":13915646,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915333,"byte_end":13915411,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915416,"byte_end":13915433,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915438,"byte_end":13915441,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915446,"byte_end":13915521,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915526,"byte_end":13915596,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915601,"byte_end":13915623,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916011,"byte_end":13916021,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915742,"byte_end":13915809,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915814,"byte_end":13915817,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915822,"byte_end":13915897,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915902,"byte_end":13915972,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13915977,"byte_end":13915999,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916133,"byte_end":13916140,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916071,"byte_end":13916121,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916263,"byte_end":13916274,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916193,"byte_end":13916251,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916394,"byte_end":13916405,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916339,"byte_end":13916382,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916535,"byte_end":13916550,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916472,"byte_end":13916523,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13918651,"byte_end":13918662,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13918869,"byte_end":13918872,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13918800,"byte_end":13918857,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919430,"byte_end":13919437,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919142,"byte_end":13919205,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919210,"byte_end":13919228,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919233,"byte_end":13919236,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919241,"byte_end":13919316,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919321,"byte_end":13919391,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919396,"byte_end":13919418,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919786,"byte_end":13919793,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919490,"byte_end":13919561,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919566,"byte_end":13919584,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919589,"byte_end":13919592,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919597,"byte_end":13919672,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919677,"byte_end":13919747,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919752,"byte_end":13919774,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920161,"byte_end":13920172,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919858,"byte_end":13919936,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919941,"byte_end":13919959,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919964,"byte_end":13919967,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919972,"byte_end":13920047,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920052,"byte_end":13920122,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920127,"byte_end":13920149,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920538,"byte_end":13920548,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920268,"byte_end":13920336,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920341,"byte_end":13920344,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920349,"byte_end":13920424,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920429,"byte_end":13920499,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920504,"byte_end":13920526,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920660,"byte_end":13920667,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920598,"byte_end":13920648,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920790,"byte_end":13920801,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920720,"byte_end":13920778,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920922,"byte_end":13920934,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13920866,"byte_end":13920910,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13921065,"byte_end":13921081,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13921001,"byte_end":13921053,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1233},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1009},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1011},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13922608,"byte_end":13922660,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13922661,"byte_end":13922664,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13922665,"byte_end":13922735,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13922736,"byte_end":13922794,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13922795,"byte_end":13922867,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13922868,"byte_end":13922938,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13922939,"byte_end":13923006,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923007,"byte_end":13923010,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923011,"byte_end":13923032,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923033,"byte_end":13923036,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923037,"byte_end":13923112,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923113,"byte_end":13923184,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923185,"byte_end":13923256,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923257,"byte_end":13923327,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923328,"byte_end":13923368,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923369,"byte_end":13923372,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923373,"byte_end":13923380,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923381,"byte_end":13923424,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923425,"byte_end":13923483,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923484,"byte_end":13923487,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923488,"byte_end":13923543,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923544,"byte_end":13923586,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923587,"byte_end":13923592,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923593,"byte_end":13923645,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923646,"byte_end":13923651,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923652,"byte_end":13923674,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923675,"byte_end":13923682,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923683,"byte_end":13923686,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923687,"byte_end":13923759,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923760,"byte_end":13923831,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923832,"byte_end":13923851,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923852,"byte_end":13923855,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923856,"byte_end":13923867,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923868,"byte_end":13923917,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923918,"byte_end":13923967,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13923968,"byte_end":13924017,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924018,"byte_end":13924025,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924026,"byte_end":13924029,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924030,"byte_end":13924068,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924069,"byte_end":13924072,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924073,"byte_end":13924080,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924081,"byte_end":13924124,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924125,"byte_end":13924183,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924184,"byte_end":13924187,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924188,"byte_end":13924213,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924214,"byte_end":13924235,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924236,"byte_end":13924239,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924240,"byte_end":13924316,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924317,"byte_end":13924326,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924327,"byte_end":13924369,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924370,"byte_end":13924375,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924376,"byte_end":13924449,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924450,"byte_end":13924497,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924498,"byte_end":13924501,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924502,"byte_end":13924539,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924540,"byte_end":13924554,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924555,"byte_end":13924560,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924561,"byte_end":13924568,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924569,"byte_end":13924572,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924573,"byte_end":13924615,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924616,"byte_end":13924619,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924620,"byte_end":13924631,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924632,"byte_end":13924671,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924672,"byte_end":13924711,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924712,"byte_end":13924751,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924752,"byte_end":13924759,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924760,"byte_end":13924763,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924764,"byte_end":13924778,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924779,"byte_end":13924782,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924783,"byte_end":13924858,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924859,"byte_end":13924932,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13924933,"byte_end":13924999,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925000,"byte_end":13925069,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925070,"byte_end":13925135,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925136,"byte_end":13925139,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925140,"byte_end":13925156,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925157,"byte_end":13925160,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925161,"byte_end":13925237,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925238,"byte_end":13925279,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925280,"byte_end":13925283,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925284,"byte_end":13925291,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925292,"byte_end":13925323,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925324,"byte_end":13925374,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925375,"byte_end":13925416,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925417,"byte_end":13925452,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925453,"byte_end":13925501,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925502,"byte_end":13925533,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925534,"byte_end":13925582,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925583,"byte_end":13925632,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925633,"byte_end":13925655,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925656,"byte_end":13925663,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925664,"byte_end":13925686,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925687,"byte_end":13925694,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925695,"byte_end":13925698,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925699,"byte_end":13925747,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925748,"byte_end":13925751,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925752,"byte_end":13925763,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925764,"byte_end":13925816,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925817,"byte_end":13925882,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925883,"byte_end":13925948,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13925949,"byte_end":13926014,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926015,"byte_end":13926022,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926023,"byte_end":13926026,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926027,"byte_end":13926103,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926104,"byte_end":13926178,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926179,"byte_end":13926251,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926252,"byte_end":13926328,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926329,"byte_end":13926371,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926372,"byte_end":13926375,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926376,"byte_end":13926392,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926393,"byte_end":13926396,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926397,"byte_end":13926472,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926473,"byte_end":13926514,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926515,"byte_end":13926518,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926519,"byte_end":13926526,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926527,"byte_end":13926558,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926559,"byte_end":13926609,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926610,"byte_end":13926651,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926652,"byte_end":13926687,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926688,"byte_end":13926736,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926737,"byte_end":13926768,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926769,"byte_end":13926817,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926818,"byte_end":13926877,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926878,"byte_end":13926900,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926901,"byte_end":13926908,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926909,"byte_end":13926931,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926932,"byte_end":13926939,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926940,"byte_end":13926943,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926944,"byte_end":13926992,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926993,"byte_end":13926996,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13926997,"byte_end":13927008,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927009,"byte_end":13927058,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927059,"byte_end":13927113,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927114,"byte_end":13927168,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927169,"byte_end":13927223,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927224,"byte_end":13927231,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927232,"byte_end":13927235,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927236,"byte_end":13927309,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927310,"byte_end":13927377,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927378,"byte_end":13927381,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927382,"byte_end":13927398,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927399,"byte_end":13927402,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927403,"byte_end":13927479,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927480,"byte_end":13927552,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927553,"byte_end":13927592,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927593,"byte_end":13927596,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927597,"byte_end":13927604,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927605,"byte_end":13927636,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927637,"byte_end":13927687,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927688,"byte_end":13927729,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927730,"byte_end":13927765,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927766,"byte_end":13927814,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927815,"byte_end":13927846,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927847,"byte_end":13927894,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927895,"byte_end":13927915,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927916,"byte_end":13927938,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927939,"byte_end":13927946,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927947,"byte_end":13927969,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927970,"byte_end":13927977,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927978,"byte_end":13927981,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13927982,"byte_end":13928030,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928031,"byte_end":13928034,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928035,"byte_end":13928046,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928047,"byte_end":13928099,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928100,"byte_end":13928165,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928166,"byte_end":13928231,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928232,"byte_end":13928297,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928298,"byte_end":13928305,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928306,"byte_end":13928309,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928310,"byte_end":13928382,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928383,"byte_end":13928458,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928459,"byte_end":13928531,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928532,"byte_end":13928608,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928609,"byte_end":13928682,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928683,"byte_end":13928686,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928687,"byte_end":13928703,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928704,"byte_end":13928707,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928708,"byte_end":13928782,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928783,"byte_end":13928850,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928851,"byte_end":13928854,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928855,"byte_end":13928862,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928863,"byte_end":13928894,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928895,"byte_end":13928945,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928946,"byte_end":13928987,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13928988,"byte_end":13929023,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929024,"byte_end":13929072,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929073,"byte_end":13929104,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929105,"byte_end":13929153,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929154,"byte_end":13929174,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929175,"byte_end":13929197,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929198,"byte_end":13929205,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929206,"byte_end":13929228,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929229,"byte_end":13929236,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929237,"byte_end":13929240,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929241,"byte_end":13929289,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929290,"byte_end":13929293,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929294,"byte_end":13929305,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929306,"byte_end":13929332,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929333,"byte_end":13929378,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929379,"byte_end":13929424,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929425,"byte_end":13929470,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929471,"byte_end":13929474,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929475,"byte_end":13929503,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929504,"byte_end":13929549,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929550,"byte_end":13929595,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929596,"byte_end":13929641,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929642,"byte_end":13929649,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929650,"byte_end":13929653,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929654,"byte_end":13929726,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929727,"byte_end":13929803,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929804,"byte_end":13929874,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929875,"byte_end":13929944,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929945,"byte_end":13929982,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929983,"byte_end":13929986,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13929987,"byte_end":13930061,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930062,"byte_end":13930116,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930117,"byte_end":13930120,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930121,"byte_end":13930137,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930138,"byte_end":13930141,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930142,"byte_end":13930215,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930216,"byte_end":13930292,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930293,"byte_end":13930367,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930368,"byte_end":13930381,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930382,"byte_end":13930385,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930386,"byte_end":13930393,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930394,"byte_end":13930425,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930426,"byte_end":13930476,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930477,"byte_end":13930518,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930519,"byte_end":13930554,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930555,"byte_end":13930604,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930605,"byte_end":13930636,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930637,"byte_end":13930685,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930686,"byte_end":13930730,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930731,"byte_end":13930753,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930754,"byte_end":13930761,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930762,"byte_end":13930784,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930785,"byte_end":13930792,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930793,"byte_end":13930796,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930797,"byte_end":13930845,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930846,"byte_end":13930849,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930850,"byte_end":13930861,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930862,"byte_end":13930888,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930889,"byte_end":13930939,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930940,"byte_end":13930990,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13930991,"byte_end":13931041,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931042,"byte_end":13931045,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931046,"byte_end":13931066,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931067,"byte_end":13931097,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931098,"byte_end":13931128,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931129,"byte_end":13931159,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931160,"byte_end":13931167,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931168,"byte_end":13931171,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931172,"byte_end":13931245,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931246,"byte_end":13931321,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931322,"byte_end":13931394,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931395,"byte_end":13931433,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931434,"byte_end":13931437,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931438,"byte_end":13931512,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931513,"byte_end":13931589,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931590,"byte_end":13931663,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931664,"byte_end":13931692,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931693,"byte_end":13931696,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931697,"byte_end":13931713,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931714,"byte_end":13931717,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931718,"byte_end":13931791,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931792,"byte_end":13931868,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931869,"byte_end":13931943,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13931944,"byte_end":13932016,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932017,"byte_end":13932028,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932029,"byte_end":13932032,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932033,"byte_end":13932040,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932041,"byte_end":13932072,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932073,"byte_end":13932123,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932124,"byte_end":13932165,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932166,"byte_end":13932201,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932202,"byte_end":13932251,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932252,"byte_end":13932283,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932284,"byte_end":13932349,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932350,"byte_end":13932370,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932371,"byte_end":13932393,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932394,"byte_end":13932401,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932402,"byte_end":13932409,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932410,"byte_end":13932413,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932414,"byte_end":13932462,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932463,"byte_end":13932466,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932467,"byte_end":13932478,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932479,"byte_end":13932505,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932506,"byte_end":13932556,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932557,"byte_end":13932607,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932608,"byte_end":13932658,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932659,"byte_end":13932662,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932663,"byte_end":13932683,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932684,"byte_end":13932714,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932715,"byte_end":13932745,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932746,"byte_end":13932776,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932777,"byte_end":13932784,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932785,"byte_end":13932788,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932789,"byte_end":13932862,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932863,"byte_end":13932937,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13932938,"byte_end":13933012,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933013,"byte_end":13933086,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933087,"byte_end":13933163,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933164,"byte_end":13933197,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933198,"byte_end":13933201,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933202,"byte_end":13933218,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933219,"byte_end":13933222,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933223,"byte_end":13933297,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933298,"byte_end":13933365,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933366,"byte_end":13933369,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933370,"byte_end":13933377,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933378,"byte_end":13933409,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933410,"byte_end":13933460,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933461,"byte_end":13933502,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933503,"byte_end":13933538,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933539,"byte_end":13933587,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933588,"byte_end":13933619,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933620,"byte_end":13933667,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933668,"byte_end":13933714,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933715,"byte_end":13933737,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933738,"byte_end":13933745,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933746,"byte_end":13933768,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933769,"byte_end":13933776,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933777,"byte_end":13933780,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933781,"byte_end":13933829,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933830,"byte_end":13933833,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933834,"byte_end":13933845,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933846,"byte_end":13933902,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933903,"byte_end":13933964,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13933965,"byte_end":13934026,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934027,"byte_end":13934088,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934089,"byte_end":13934096,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934097,"byte_end":13934100,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934101,"byte_end":13934175,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934176,"byte_end":13934196,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934197,"byte_end":13934200,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934201,"byte_end":13934215,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934216,"byte_end":13934219,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934220,"byte_end":13934295,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934296,"byte_end":13934368,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934369,"byte_end":13934437,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934438,"byte_end":13934514,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934515,"byte_end":13934556,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934557,"byte_end":13934560,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934561,"byte_end":13934631,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934632,"byte_end":13934650,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934651,"byte_end":13934654,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934655,"byte_end":13934662,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934663,"byte_end":13934695,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934696,"byte_end":13934746,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934747,"byte_end":13934791,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934792,"byte_end":13934805,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934806,"byte_end":13934841,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934842,"byte_end":13934873,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934874,"byte_end":13934897,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934898,"byte_end":13934905,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934906,"byte_end":13934928,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934929,"byte_end":13934936,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934937,"byte_end":13934940,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934941,"byte_end":13934991,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934992,"byte_end":13934995,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13934996,"byte_end":13935007,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935008,"byte_end":13935041,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935042,"byte_end":13935075,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935076,"byte_end":13935109,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935110,"byte_end":13935117,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935118,"byte_end":13935121,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935122,"byte_end":13935191,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935192,"byte_end":13935229,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935230,"byte_end":13935269,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935270,"byte_end":13935315,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935316,"byte_end":13935363,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935364,"byte_end":13935394,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935395,"byte_end":13935428,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935990,"byte_end":13935997,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935672,"byte_end":13935727,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935728,"byte_end":13935731,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935732,"byte_end":13935807,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935808,"byte_end":13935888,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13935889,"byte_end":13935948,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936668,"byte_end":13936693,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936583,"byte_end":13936656,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937038,"byte_end":13937058,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936714,"byte_end":13936788,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936789,"byte_end":13936792,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936793,"byte_end":13936872,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936873,"byte_end":13936916,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936917,"byte_end":13936920,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936921,"byte_end":13936974,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936975,"byte_end":13936978,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13936979,"byte_end":13937009,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937402,"byte_end":13937405,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937311,"byte_end":13937390,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937632,"byte_end":13937639,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937529,"byte_end":13937604,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937609,"byte_end":13937620,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937861,"byte_end":13937877,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937689,"byte_end":13937730,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937735,"byte_end":13937738,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937743,"byte_end":13937816,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937821,"byte_end":13937849,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13938298,"byte_end":13938318,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937942,"byte_end":13937976,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937981,"byte_end":13937984,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937989,"byte_end":13938059,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13938064,"byte_end":13938139,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13938144,"byte_end":13938216,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13938221,"byte_end":13938286,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943574,"byte_end":13943577,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943032,"byte_end":13943107,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943112,"byte_end":13943123,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943128,"byte_end":13943131,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943136,"byte_end":13943150,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943155,"byte_end":13943158,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943163,"byte_end":13943170,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943175,"byte_end":13943206,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943211,"byte_end":13943259,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943264,"byte_end":13943267,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943272,"byte_end":13943313,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943318,"byte_end":13943353,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943358,"byte_end":13943389,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943394,"byte_end":13943425,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943430,"byte_end":13943459,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943464,"byte_end":13943484,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943489,"byte_end":13943511,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943516,"byte_end":13943523,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943528,"byte_end":13943550,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943555,"byte_end":13943562,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944762,"byte_end":13944772,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944241,"byte_end":13944290,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944295,"byte_end":13944298,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944303,"byte_end":13944335,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944340,"byte_end":13944343,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944348,"byte_end":13944416,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944421,"byte_end":13944424,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944429,"byte_end":13944443,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944448,"byte_end":13944451,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944456,"byte_end":13944463,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944468,"byte_end":13944499,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944504,"byte_end":13944552,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944557,"byte_end":13944560,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944565,"byte_end":13944606,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944611,"byte_end":13944646,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944651,"byte_end":13944672,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944677,"byte_end":13944699,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944704,"byte_end":13944711,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944716,"byte_end":13944738,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944743,"byte_end":13944750,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945404,"byte_end":13945417,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944871,"byte_end":13944923,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944928,"byte_end":13944931,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944936,"byte_end":13944974,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944979,"byte_end":13944982,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13944987,"byte_end":13945055,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945060,"byte_end":13945063,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945068,"byte_end":13945082,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945087,"byte_end":13945090,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945095,"byte_end":13945102,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945107,"byte_end":13945138,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945143,"byte_end":13945191,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945196,"byte_end":13945199,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945204,"byte_end":13945245,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945250,"byte_end":13945285,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945290,"byte_end":13945314,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945319,"byte_end":13945341,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945346,"byte_end":13945353,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945358,"byte_end":13945380,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945385,"byte_end":13945392,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946050,"byte_end":13946063,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945517,"byte_end":13945569,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945574,"byte_end":13945577,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945582,"byte_end":13945620,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945625,"byte_end":13945628,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945633,"byte_end":13945701,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945706,"byte_end":13945709,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945714,"byte_end":13945728,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945733,"byte_end":13945736,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945741,"byte_end":13945748,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945753,"byte_end":13945784,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945789,"byte_end":13945837,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945842,"byte_end":13945845,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945850,"byte_end":13945891,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945896,"byte_end":13945931,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945936,"byte_end":13945960,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945965,"byte_end":13945987,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13945992,"byte_end":13945999,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946004,"byte_end":13946026,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946031,"byte_end":13946038,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947144,"byte_end":13947160,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946232,"byte_end":13946261,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946266,"byte_end":13946269,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946274,"byte_end":13946346,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946351,"byte_end":13946376,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946381,"byte_end":13946384,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946389,"byte_end":13946461,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946466,"byte_end":13946535,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946540,"byte_end":13946613,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946618,"byte_end":13946630,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946635,"byte_end":13946638,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946643,"byte_end":13946718,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946723,"byte_end":13946784,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946789,"byte_end":13946792,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946797,"byte_end":13946811,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946816,"byte_end":13946819,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946824,"byte_end":13946831,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946836,"byte_end":13946867,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946872,"byte_end":13946920,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946925,"byte_end":13946928,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946933,"byte_end":13946974,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13946979,"byte_end":13947014,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947019,"byte_end":13947054,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947059,"byte_end":13947081,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947086,"byte_end":13947093,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947098,"byte_end":13947120,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947125,"byte_end":13947132,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947821,"byte_end":13947840,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947257,"byte_end":13947320,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947325,"byte_end":13947328,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947333,"byte_end":13947384,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947389,"byte_end":13947392,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947397,"byte_end":13947465,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947470,"byte_end":13947473,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947478,"byte_end":13947492,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947497,"byte_end":13947500,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947505,"byte_end":13947512,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947517,"byte_end":13947548,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947553,"byte_end":13947601,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947606,"byte_end":13947609,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947614,"byte_end":13947655,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947660,"byte_end":13947695,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947700,"byte_end":13947731,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947736,"byte_end":13947758,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947763,"byte_end":13947770,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947775,"byte_end":13947797,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13947802,"byte_end":13947809,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948499,"byte_end":13948518,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948009,"byte_end":13948075,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948080,"byte_end":13948083,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948088,"byte_end":13948143,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948148,"byte_end":13948151,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948156,"byte_end":13948170,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948175,"byte_end":13948178,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948183,"byte_end":13948190,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948195,"byte_end":13948226,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948231,"byte_end":13948279,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948284,"byte_end":13948287,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948292,"byte_end":13948333,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948338,"byte_end":13948373,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948378,"byte_end":13948409,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948414,"byte_end":13948436,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948441,"byte_end":13948448,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948453,"byte_end":13948475,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948480,"byte_end":13948487,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949072,"byte_end":13949089,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948621,"byte_end":13948694,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948699,"byte_end":13948717,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948722,"byte_end":13948725,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948730,"byte_end":13948744,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948749,"byte_end":13948752,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948757,"byte_end":13948764,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948769,"byte_end":13948800,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948805,"byte_end":13948853,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948858,"byte_end":13948861,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948866,"byte_end":13948907,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948912,"byte_end":13948947,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948952,"byte_end":13948982,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13948987,"byte_end":13949009,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949014,"byte_end":13949021,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949026,"byte_end":13949048,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949053,"byte_end":13949060,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949739,"byte_end":13949747,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949190,"byte_end":13949253,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949258,"byte_end":13949261,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949266,"byte_end":13949327,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949332,"byte_end":13949335,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949340,"byte_end":13949394,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949399,"byte_end":13949402,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949407,"byte_end":13949421,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949426,"byte_end":13949429,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949434,"byte_end":13949441,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949446,"byte_end":13949477,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949482,"byte_end":13949530,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949535,"byte_end":13949538,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949543,"byte_end":13949584,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949589,"byte_end":13949624,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949629,"byte_end":13949649,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949654,"byte_end":13949676,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949681,"byte_end":13949688,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949693,"byte_end":13949715,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949720,"byte_end":13949727,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950267,"byte_end":13950276,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949845,"byte_end":13949908,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949913,"byte_end":13949916,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949921,"byte_end":13949935,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949940,"byte_end":13949943,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949948,"byte_end":13949955,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13949960,"byte_end":13950008,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950013,"byte_end":13950034,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950039,"byte_end":13950074,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950079,"byte_end":13950110,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950115,"byte_end":13950146,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950151,"byte_end":13950180,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950185,"byte_end":13950205,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950210,"byte_end":13950231,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950236,"byte_end":13950243,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950248,"byte_end":13950255,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950932,"byte_end":13950940,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950428,"byte_end":13950481,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950486,"byte_end":13950489,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950494,"byte_end":13950508,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950513,"byte_end":13950516,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950521,"byte_end":13950528,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950533,"byte_end":13950564,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950569,"byte_end":13950617,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950622,"byte_end":13950625,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950630,"byte_end":13950671,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950676,"byte_end":13950711,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950716,"byte_end":13950747,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950752,"byte_end":13950783,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950788,"byte_end":13950817,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950822,"byte_end":13950842,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950847,"byte_end":13950869,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950874,"byte_end":13950881,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950886,"byte_end":13950908,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13950913,"byte_end":13950920,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951513,"byte_end":13951522,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951104,"byte_end":13951158,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951163,"byte_end":13951166,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951171,"byte_end":13951185,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951190,"byte_end":13951193,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951198,"byte_end":13951205,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951210,"byte_end":13951242,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951247,"byte_end":13951297,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951302,"byte_end":13951346,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951351,"byte_end":13951386,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951391,"byte_end":13951422,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951427,"byte_end":13951450,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951455,"byte_end":13951462,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951467,"byte_end":13951489,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951494,"byte_end":13951501,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952131,"byte_end":13952141,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951683,"byte_end":13951732,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951737,"byte_end":13951740,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951745,"byte_end":13951759,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951764,"byte_end":13951767,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951772,"byte_end":13951779,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951784,"byte_end":13951829,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951834,"byte_end":13951884,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951889,"byte_end":13951945,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951950,"byte_end":13951963,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13951968,"byte_end":13952003,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952008,"byte_end":13952039,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952044,"byte_end":13952068,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952073,"byte_end":13952080,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952085,"byte_end":13952107,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952112,"byte_end":13952119,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13953520,"byte_end":13953530,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13953277,"byte_end":13953364,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13953365,"byte_end":13953368,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13953369,"byte_end":13953407,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13953408,"byte_end":13953446,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954630,"byte_end":13954633,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954211,"byte_end":13954271,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954276,"byte_end":13954279,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954284,"byte_end":13954294,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954299,"byte_end":13954302,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954307,"byte_end":13954379,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954384,"byte_end":13954457,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954462,"byte_end":13954529,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954534,"byte_end":13954537,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954542,"byte_end":13954618,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955764,"byte_end":13955783,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954791,"byte_end":13954851,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954856,"byte_end":13954859,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954864,"byte_end":13954927,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954932,"byte_end":13955010,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955015,"byte_end":13955082,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955087,"byte_end":13955159,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955164,"byte_end":13955234,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955239,"byte_end":13955262,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955267,"byte_end":13955270,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955275,"byte_end":13955285,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955290,"byte_end":13955293,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955298,"byte_end":13955373,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955378,"byte_end":13955451,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955456,"byte_end":13955532,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955537,"byte_end":13955610,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955615,"byte_end":13955685,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955690,"byte_end":13955693,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955698,"byte_end":13955752,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956349,"byte_end":13956359,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955911,"byte_end":13955961,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955966,"byte_end":13955969,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955974,"byte_end":13955981,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13955986,"byte_end":13956005,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956010,"byte_end":13956048,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956053,"byte_end":13956056,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956061,"byte_end":13956095,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956100,"byte_end":13956147,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956152,"byte_end":13956159,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956164,"byte_end":13956171,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956176,"byte_end":13956214,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956219,"byte_end":13956222,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956227,"byte_end":13956280,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956285,"byte_end":13956325,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956330,"byte_end":13956337,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960685,"byte_end":13960706,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960639,"byte_end":13960680,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960742,"byte_end":13960744,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960712,"byte_end":13960737,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960617,"byte_end":13960632,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1286}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960534,"byte_end":13960590,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962666,"byte_end":13962683,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961480,"byte_end":13961621,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961622,"byte_end":13961625,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961626,"byte_end":13961664,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961665,"byte_end":13961703,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961704,"byte_end":13961707,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961708,"byte_end":13961721,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961722,"byte_end":13961789,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961790,"byte_end":13961793,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961794,"byte_end":13961827,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961828,"byte_end":13961857,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961858,"byte_end":13961861,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961862,"byte_end":13961869,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961870,"byte_end":13961926,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961927,"byte_end":13961961,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961962,"byte_end":13961965,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961966,"byte_end":13961971,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13961972,"byte_end":13962019,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962020,"byte_end":13962073,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962074,"byte_end":13962151,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962152,"byte_end":13962187,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962188,"byte_end":13962209,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962210,"byte_end":13962260,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962261,"byte_end":13962324,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962325,"byte_end":13962388,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962389,"byte_end":13962452,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962453,"byte_end":13962509,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962510,"byte_end":13962559,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962560,"byte_end":13962572,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962573,"byte_end":13962580,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962581,"byte_end":13962588,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13962589,"byte_end":13962592,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964018,"byte_end":13964021,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963576,"byte_end":13963644,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963649,"byte_end":13963652,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963657,"byte_end":13963667,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963672,"byte_end":13963675,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963680,"byte_end":13963759,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963764,"byte_end":13963838,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963843,"byte_end":13963910,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963915,"byte_end":13963918,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963923,"byte_end":13964006,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965332,"byte_end":13965351,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964301,"byte_end":13964369,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964374,"byte_end":13964377,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964382,"byte_end":13964452,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964457,"byte_end":13964543,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964548,"byte_end":13964618,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964623,"byte_end":13964700,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964705,"byte_end":13964775,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964780,"byte_end":13964803,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964808,"byte_end":13964811,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964816,"byte_end":13964826,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964831,"byte_end":13964834,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964839,"byte_end":13964921,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13964926,"byte_end":13964999,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965004,"byte_end":13965081,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965086,"byte_end":13965159,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965164,"byte_end":13965239,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965244,"byte_end":13965247,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965252,"byte_end":13965320,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13966139,"byte_end":13966149,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965608,"byte_end":13965659,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965664,"byte_end":13965667,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965672,"byte_end":13965679,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965684,"byte_end":13965703,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965708,"byte_end":13965753,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965758,"byte_end":13965761,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965766,"byte_end":13965838,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965843,"byte_end":13965890,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965895,"byte_end":13965902,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965907,"byte_end":13965914,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965919,"byte_end":13965964,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965969,"byte_end":13965972,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13965977,"byte_end":13966070,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13966075,"byte_end":13966115,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13966120,"byte_end":13966127,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970245,"byte_end":13970267,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970198,"byte_end":13970240,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970303,"byte_end":13970305,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970273,"byte_end":13970298,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970169,"byte_end":13970191,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1318}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970085,"byte_end":13970142,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6625,"byte_end":6655,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40554,"byte_end":40563,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40377,"byte_end":40441,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40442,"byte_end":40525,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40826,"byte_end":40832,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40639,"byte_end":40713,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40718,"byte_end":40788,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40793,"byte_end":40814,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8652,"byte_end":8669,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7434,"byte_end":7511,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7512,"byte_end":7522,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7523,"byte_end":7526,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7527,"byte_end":7592,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7593,"byte_end":7667,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7668,"byte_end":7671,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7672,"byte_end":7755,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7756,"byte_end":7759,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7760,"byte_end":7774,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7775,"byte_end":7778,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7779,"byte_end":7792,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7793,"byte_end":7815,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7816,"byte_end":7856,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7857,"byte_end":7860,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7861,"byte_end":7879,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7880,"byte_end":7901,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7902,"byte_end":7947,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7948,"byte_end":7989,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7990,"byte_end":7993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7994,"byte_end":8045,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8109,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8131,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8132,"byte_end":8181,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8182,"byte_end":8228,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8229,"byte_end":8250,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8251,"byte_end":8268,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8350,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8351,"byte_end":8373,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8374,"byte_end":8391,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8392,"byte_end":8405,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8406,"byte_end":8417,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8418,"byte_end":8421,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8422,"byte_end":8455,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8456,"byte_end":8531,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8532,"byte_end":8559,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8560,"byte_end":8571,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8572,"byte_end":8575,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8576,"byte_end":8626,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8632,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8633,"byte_end":8640,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9089,"byte_end":9114,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8936,"byte_end":9010,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9011,"byte_end":9028,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9029,"byte_end":9077,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11622,"byte_end":11625,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11547,"byte_end":11610,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13678,"byte_end":13689,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12415,"byte_end":12486,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12491,"byte_end":12524,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12529,"byte_end":12532,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12537,"byte_end":12608,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12645,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12650,"byte_end":12653,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12672,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12677,"byte_end":12680,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12685,"byte_end":12698,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12725,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12730,"byte_end":12770,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12775,"byte_end":12778,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12783,"byte_end":12801,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12806,"byte_end":12827,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12832,"byte_end":12877,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12882,"byte_end":12928,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12933,"byte_end":12936,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12941,"byte_end":12992,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12997,"byte_end":13060,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13065,"byte_end":13086,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13091,"byte_end":13139,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13144,"byte_end":13190,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13195,"byte_end":13216,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13221,"byte_end":13238,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13243,"byte_end":13324,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13329,"byte_end":13351,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13356,"byte_end":13373,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13378,"byte_end":13391,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13396,"byte_end":13407,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13412,"byte_end":13415,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13420,"byte_end":13453,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13458,"byte_end":13533,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13538,"byte_end":13565,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13570,"byte_end":13581,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13586,"byte_end":13589,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13594,"byte_end":13644,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13654,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13659,"byte_end":13666,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16264,"byte_end":16270,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16075,"byte_end":16147,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16152,"byte_end":16172,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16177,"byte_end":16180,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16185,"byte_end":16252,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16398,"byte_end":16410,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16322,"byte_end":16386,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16561,"byte_end":16570,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16475,"byte_end":16549,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16972,"byte_end":16982,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16809,"byte_end":16850,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16855,"byte_end":16858,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16863,"byte_end":16935,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16940,"byte_end":16960,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71142,"byte_end":71152,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71004,"byte_end":71061,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71062,"byte_end":71065,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71066,"byte_end":71113,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71875,"byte_end":71878,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71833,"byte_end":71863,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72593,"byte_end":72603,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72081,"byte_end":72110,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72115,"byte_end":72118,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72123,"byte_end":72199,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72204,"byte_end":72273,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72278,"byte_end":72296,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72301,"byte_end":72304,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72309,"byte_end":72380,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72385,"byte_end":72458,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72463,"byte_end":72537,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72542,"byte_end":72581,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74124,"byte_end":74138,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73027,"byte_end":73108,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73113,"byte_end":73159,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73164,"byte_end":73167,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73172,"byte_end":73220,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73225,"byte_end":73228,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73233,"byte_end":73317,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73322,"byte_end":73381,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73386,"byte_end":73471,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73476,"byte_end":73495,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73500,"byte_end":73579,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73584,"byte_end":73587,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73592,"byte_end":73667,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73672,"byte_end":73748,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73753,"byte_end":73808,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73813,"byte_end":73887,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73892,"byte_end":73965,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73970,"byte_end":74004,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74009,"byte_end":74012,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74017,"byte_end":74093,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74098,"byte_end":74112,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74772,"byte_end":74780,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74524,"byte_end":74589,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74594,"byte_end":74597,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74602,"byte_end":74675,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74680,"byte_end":74690,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74695,"byte_end":74698,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74703,"byte_end":74760,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74892,"byte_end":74901,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74834,"byte_end":74880,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75242,"byte_end":75253,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75043,"byte_end":75077,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75082,"byte_end":75085,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75090,"byte_end":75163,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75168,"byte_end":75230,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75558,"byte_end":75567,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75358,"byte_end":75393,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75398,"byte_end":75401,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75406,"byte_end":75479,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75484,"byte_end":75546,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76267,"byte_end":76284,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75718,"byte_end":75787,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75792,"byte_end":75795,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75800,"byte_end":75870,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75875,"byte_end":75948,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75953,"byte_end":75999,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76004,"byte_end":76007,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76012,"byte_end":76087,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76092,"byte_end":76166,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76171,"byte_end":76197,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76202,"byte_end":76205,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76210,"byte_end":76255,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76450,"byte_end":76460,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76337,"byte_end":76384,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76389,"byte_end":76392,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76397,"byte_end":76438,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78972,"byte_end":78985,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78841,"byte_end":78914,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78915,"byte_end":78918,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78919,"byte_end":78960,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79179,"byte_end":79182,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79134,"byte_end":79167,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79346,"byte_end":79351,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79309,"byte_end":79334,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79457,"byte_end":79468,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79403,"byte_end":79445,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79583,"byte_end":79593,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79538,"byte_end":79571,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80327,"byte_end":80339,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79654,"byte_end":79702,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79707,"byte_end":79710,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79715,"byte_end":79756,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79761,"byte_end":79764,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79769,"byte_end":79831,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79896,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79901,"byte_end":79961,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79966,"byte_end":79969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79974,"byte_end":80049,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80054,"byte_end":80122,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80127,"byte_end":80203,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80208,"byte_end":80276,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80281,"byte_end":80315,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81767,"byte_end":81784,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81483,"byte_end":81535,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81540,"byte_end":81543,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81548,"byte_end":81624,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81629,"byte_end":81663,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81668,"byte_end":81671,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81676,"byte_end":81755,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82244,"byte_end":82255,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81857,"byte_end":81899,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81904,"byte_end":81907,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81912,"byte_end":81985,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81990,"byte_end":82030,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82035,"byte_end":82038,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82043,"byte_end":82113,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82118,"byte_end":82152,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82232,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83398,"byte_end":83415,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83198,"byte_end":83255,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83256,"byte_end":83259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83260,"byte_end":83327,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83328,"byte_end":83386,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83593,"byte_end":83596,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83510,"byte_end":83581,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84177,"byte_end":84180,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83962,"byte_end":84014,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84019,"byte_end":84022,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84027,"byte_end":84099,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84104,"byte_end":84165,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84623,"byte_end":84630,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84382,"byte_end":84434,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84439,"byte_end":84442,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84447,"byte_end":84520,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84525,"byte_end":84595,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84600,"byte_end":84611,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86470,"byte_end":86477,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86406,"byte_end":86458,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86763,"byte_end":86767,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86708,"byte_end":86751,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1406},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":87880,"byte_end":87915,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89862,"byte_end":89866,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89875,"byte_end":89880,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89843,"byte_end":89849,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1412}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88092,"byte_end":88198,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88199,"byte_end":88202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88203,"byte_end":88293,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88294,"byte_end":88297,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88298,"byte_end":88333,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88334,"byte_end":88337,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88338,"byte_end":88351,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88352,"byte_end":88355,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88356,"byte_end":88393,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88394,"byte_end":88397,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88398,"byte_end":88417,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88418,"byte_end":88460,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88461,"byte_end":88511,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88512,"byte_end":88563,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88564,"byte_end":88582,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88583,"byte_end":88604,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88605,"byte_end":88647,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88648,"byte_end":88681,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88682,"byte_end":88698,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88699,"byte_end":88793,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88794,"byte_end":88804,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88805,"byte_end":88808,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88809,"byte_end":88856,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88857,"byte_end":88862,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88863,"byte_end":88870,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88871,"byte_end":88874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89075,"byte_end":89078,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89079,"byte_end":89165,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89166,"byte_end":89176,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89177,"byte_end":89180,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89181,"byte_end":89188,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89189,"byte_end":89224,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89225,"byte_end":89267,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89268,"byte_end":89318,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89319,"byte_end":89370,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89371,"byte_end":89374,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89375,"byte_end":89393,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89394,"byte_end":89415,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89416,"byte_end":89458,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89459,"byte_end":89506,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89507,"byte_end":89523,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89524,"byte_end":89573,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89574,"byte_end":89584,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89585,"byte_end":89588,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89589,"byte_end":89622,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89623,"byte_end":89663,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89664,"byte_end":89696,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89697,"byte_end":89702,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89703,"byte_end":89710,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89711,"byte_end":89733,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880998,"byte_end":13881008,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13881159,"byte_end":13881169,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13881496,"byte_end":13881506,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13891685,"byte_end":13891694,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13891894,"byte_end":13891904,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892055,"byte_end":13892064,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892387,"byte_end":13892397,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892643,"byte_end":13892651,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892748,"byte_end":13892756,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892867,"byte_end":13892875,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892975,"byte_end":13892983,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13893093,"byte_end":13893103,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13898685,"byte_end":13898695,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901531,"byte_end":13901537,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905349,"byte_end":13905355,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910670,"byte_end":13910676,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910992,"byte_end":13910998,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13911713,"byte_end":13911719,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912759,"byte_end":13912770,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13913697,"byte_end":13913707,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914596,"byte_end":13914606,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916703,"byte_end":13916713,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13917026,"byte_end":13917036,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13917762,"byte_end":13917772,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13918751,"byte_end":13918762,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919118,"byte_end":13919129,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13921238,"byte_end":13921249,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13922013,"byte_end":13922024,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13922265,"byte_end":13922276,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937284,"byte_end":13937304,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13940638,"byte_end":13940658,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13941544,"byte_end":13941564,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13942905,"byte_end":13942925,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943018,"byte_end":13943025,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952624,"byte_end":13952631,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952757,"byte_end":13952782,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952940,"byte_end":13952965,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13953100,"byte_end":13953125,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954194,"byte_end":13954204,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956746,"byte_end":13956756,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960132,"byte_end":13960142,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960465,"byte_end":13960475,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960782,"byte_end":13960797,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13961079,"byte_end":13961094,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13961211,"byte_end":13961226,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963552,"byte_end":13963569,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13966218,"byte_end":13966235,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13969527,"byte_end":13969544,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13969908,"byte_end":13969925,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970343,"byte_end":13970365,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970694,"byte_end":13970716,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970847,"byte_end":13970869,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":13879410,"byte_end":13879426,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":955}},{"kind":"Mod","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13880998,"byte_end":13881008,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13881159,"byte_end":13881169,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":13881496,"byte_end":13881506,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13891685,"byte_end":13891694,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13891894,"byte_end":13891904,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892055,"byte_end":13892064,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892387,"byte_end":13892397,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892643,"byte_end":13892651,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892748,"byte_end":13892756,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892867,"byte_end":13892875,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13892975,"byte_end":13892983,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13893093,"byte_end":13893103,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1555},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":13898685,"byte_end":13898695,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1555},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13901531,"byte_end":13901537,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13905349,"byte_end":13905355,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910670,"byte_end":13910676,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1505},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13910992,"byte_end":13910998,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1505},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13911713,"byte_end":13911719,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":13912759,"byte_end":13912770,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13913697,"byte_end":13913707,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13914596,"byte_end":13914606,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13916703,"byte_end":13916713,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1464},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13917026,"byte_end":13917036,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1464},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":13917762,"byte_end":13917772,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13918751,"byte_end":13918762,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13919118,"byte_end":13919129,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13921238,"byte_end":13921249,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1423},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13922013,"byte_end":13922024,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1423},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":13922265,"byte_end":13922276,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13937284,"byte_end":13937304,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13940638,"byte_end":13940658,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13941544,"byte_end":13941564,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13942905,"byte_end":13942925,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13943018,"byte_end":13943025,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952624,"byte_end":13952631,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952757,"byte_end":13952782,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13952940,"byte_end":13952965,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":13953100,"byte_end":13953125,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1009},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13954194,"byte_end":13954204,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13956746,"byte_end":13956756,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960132,"byte_end":13960142,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960465,"byte_end":13960475,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13960782,"byte_end":13960797,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13961079,"byte_end":13961094,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":13961211,"byte_end":13961226,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13963552,"byte_end":13963569,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13966218,"byte_end":13966235,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13969527,"byte_end":13969544,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13969908,"byte_end":13969925,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970343,"byte_end":13970365,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970694,"byte_end":13970716,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":13970847,"byte_end":13970869,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1398},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1406},"to":{"krate":19,"index":198}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1406},"to":{"krate":19,"index":156}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1406},"to":{"krate":19,"index":237}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1406},"to":{"krate":19,"index":277}},{"span":{"file_name":"/Users/kishore/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1406},"to":{"krate":17,"index":96}}]}